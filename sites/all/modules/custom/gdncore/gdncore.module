<?php
/**
* Implements hook_block_info().
*/
function gdncore_block_info() {
  $blocks = array();
  $blocks['program_more_block'] = array(
    'info' => t('Program menu more block'),
  );
  $blocks['level_one_more'] = array(
    'info' => t('Level one MORE block - Homepage'),
  );
  $blocks['level_three_more'] = array(
    'info' => t('Level three MORE block'),
  );
  return $blocks;
}

/**
* Implements hook_block_view().
*/
function gdncore_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'program_more_block':
      $block['subject'] = '';
      $block['content'] = _gdncore_program_more_block();
      break;
    case 'level_one_more':
      $block['subject'] = '';
      $block['content'] = _gdncore_level_one_more();
      break;
    case 'level_three_more':
      $block['subject'] = '';
      $block['content'] = _gdncore_level_three_more();
      break;
  }
  return $block;
}

function _gdncore_program_more_block() {
  $pathAlias = drupal_get_path_alias(current_path());
  $capacityLink = 'topic/program_capacity';
  $excellenceLink = 'topic/program_excellence';
  $outreachLink = 'topic/program_outreach';
  $links = array(
    'capacity' => $capacityLink,
    'excellence' => $excellenceLink,
    'outreach' => $outreachLink,
  );
  if(($key = array_search($pathAlias, $links)) !== false) {
    unset($links[$key]);
  }
  return theme('program_more_block', array('links' => $links));
}

function _gdncore_level_one_more() {
  $pathAlias = drupal_get_path_alias(current_path());
  $researchLink = 'topic/research';
  $opportunitiesLink = 'topic/opportunities';
  $resultsLink = 'topic/results';
  $links = array(
    'research' => $researchLink,
    'opportunities' => $opportunitiesLink,
    'results' => $resultsLink,
  );
  if(($key = array_search($pathAlias, $links)) !== false) {
    unset($links[$key]);
  }

  return theme('level_one_more', array('links' => $links));
}

function _gdncore_level_three_more() {
  $nid = (int) arg(1);
  $cnode = node_load($nid);
  $results = db_query('SELECT tid FROM {taxonomy_index} WHERE nid = :nid', array(':nid' => $cnode->nid));
  foreach ($results as $result) {
    $terms[] = taxonomy_term_load($result->tid);
  }
  $vocab_array = array(
    "tags",
    "article_type"
  );

  $finalTerms = array();
  if(count($terms) > 0) {
    foreach($terms as $key => $value) {
      if(!in_array($value->vocabulary_machine_name, $vocab_array)) {
        $finalTerms[] = (array)$value;
      }
    }
  }

  if(count($finalTerms) > 0) {
    $nodeByTerm = taxonomy_select_nodes($finalTerms[0]['tid']);
  }

  if(count($nodeByTerm) > 1) {
    if(($key = array_search($nid, $nodeByTerm)) !== false) {
      unset($nodeByTerm[$key]);
    }

    $limit = 0;
    foreach($nodeByTerm as $key => $val) {
      if(++$limit == 6) {
        break;
      }
      $objNode = node_load($val);
      $links[$objNode->title] = 'node/'.$objNode->nid;
    }

    return theme('level_three_more', array('links' => $links));
  }

////////////////////////////////////////////////

  if(count($finalTerms) > 0) {
    $nodeByTerm = taxonomy_get_tree($finalTerms[0]['vid']);
  }

  $links = array();
  if(count($nodeByTerm) > 1) {
    foreach($nodeByTerm as $value) {
      if($value->tid != $finalTerms[0]['tid']) {
        $links[$value->name] = 'taxonomy/term/' . $value->tid;
      }
    }
    if(($key = array_search($nid, $nodeByTerm)) !== false) {
      unset($nodeByTerm[$key]);
    }

    return theme('level_three_more', array('links' => $links));
  }

  
  
  //print_r($nodeByTerm);
  /*$data = array_intersect($terms, $vocab_array);
  print_r($data);*/
  return theme('level_three_more', array('links' => $links));
}

/**
* Implements hook_theme().
*/
function gdncore_theme($existing, $type, $theme, $path) {
  return array(
    'vocabulary_terms_theme' => array(
      'variables' => array('taxonomies' => NULL ),
      'template' => 'vocabulary_terms',
    ),
    'vocabulary_child_terms_theme' => array(
      'variables' => array('taxonomies' => NULL, 'current_term' => NULL),
      'template' => 'vocabulary_child_terms',
    ),
    'program_more_block' => array(
      'variables' => array('links' => NULL),
      'template' => 'program_more_block',
    ),
    'level_one_more' => array(
      'variables' => array('links' => NULL),
      'template' => 'level_one_more',
    ),
    'level_three_more' => array(
      'variables' => array('links' => NULL),
      'template' => 'level_three_more',
    ),
  );
}

// to be deleted

function getVocabMachineName($vocabName) {

  $vocabName = strtolower($vocabName);
  $arrVocabMapper = array(
    'research' => 'trends_categories',
    'analysis' => 'impact_categories',
    'opportunities' => 'opportunities_categories',
  );

  if($vocabName != '' && $arrVocabMapper[$vocabName] != '') {
    return $arrVocabMapper[$vocabName];
  }

  return FALSE;
}

function _gdncore_vocabulary_terms() {

  $arg1 = arg(1);
  $arg2 = arg(2);
  $arg3 = (int) arg(3);

  /*if($arg1 == 'taxonomy' && $arg2 == 'term') {
    if($arg3 > 0) {
      $termId = $arg3;
    } else if($arg3 == '' || $arg3 == NULL) {
      $termId = (int) arg(4);
    }
  }*/

  if( $arg1 == 'term' || $arg2 == 'term' ) {
    if((int) $arg2 == 0) {
      $termId = $arg3;
    } else if((int) $arg2 > 0) {
      $termId = $arg2;
    }
  }

  $objTerm = taxonomy_term_load($termId);
  $vocabMachineName = getVocabMachineName($objTerm->name);

  $tree = NULL;
  if($vocabMachineName) {
    $objVocab = taxonomy_vocabulary_machine_name_load($vocabMachineName);
    $tree = taxonomy_get_tree($objVocab->vid);
  }

  return theme('vocabulary_terms_theme', array('terms' => $tree));
}

function _gdncore_vocabulary_child_terms() {
  $arg1 = arg(1);
  $arg2 = arg(2);
  if( $arg1 == 'term' || $arg2 == 'term' ) {
    if((int) $arg2 == 0) {
      $termId = $arg3;
    } else if((int) $arg2 > 0) {
      $termId = $arg2;
    }
  }

  $objTerm = taxonomy_term_load($termId);
  //echo $termId;
  //print_r($objTerm);die;
  $tree = taxonomy_get_tree($objTerm->vid);
  return theme('vocabulary_child_terms_theme', array('terms' => $tree, 'current_term' => $objTerm->name));
}
